from abc import ABC, abstractmethod
from typing import List, Optional
from app.domain.entities.order import Order
from app.shared.enums.order_status import OrderStatus

class OrderRepositoryPort(ABC):
    @abstractmethod
    def create(self, order: Order) -> Order: ...
    @abstractmethod
    def find_by_id(self, order_id: int) -> Optional[Order]: ...
    @abstractmethod
    def find_all(self, status: Optional[OrderStatus]) -> List[Order]: ...
    @abstractmethod
    def find_active_sorted_orders(self) -> List[Order]: ...
    @abstractmethod
    def find_by_client(self, client_id: int) -> List[Order]: ...
    @abstractmethod
    def update(self, order: Order) -> Order: ...
    @abstractmethod
    def delete(self, order_id: int) -> None: ...
